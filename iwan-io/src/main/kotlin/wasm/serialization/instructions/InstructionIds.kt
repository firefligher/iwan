package dev.fir3.iwan.io.wasm.serialization.instructions

internal object InstructionIds {
    const val BLOCK: UByte = 0x02u
    const val BRANCH: UByte = 0x0Cu
    const val BRANCH_IF: UByte = 0x0Du
    const val BRANCH_TABLE: UByte = 0x0Eu
    const val CALL: UByte = 0x10u
    const val CALL_INDIRECT: UByte = 0x11u
    const val DROP: UByte = 0x1Au
    const val ELSE: UByte = 0x05u
    const val END: UByte = 0x0Bu
    const val FLOAT32_ABS: UByte = 0x8Bu
    const val FLOAT32_ADD: UByte = 0x92u
    const val FLOAT32_CEIL: UByte = 0x8Du
    const val FLOAT32_CONST: UByte = 0x43u
    const val FLOAT32_CONVERT_INT32_S: UByte = 0xB2u
    const val FLOAT32_CONVERT_INT32_U: UByte = 0xB3u
    const val FLOAT32_CONVERT_INT64_S: UByte = 0xB4u
    const val FLOAT32_CONVERT_INT64_U: UByte = 0xB5u
    const val FLOAT32_COPYSIGN: UByte = 0x98u
    const val FLOAT32_DEMOTE_FLOAT64: UByte = 0xB6u
    const val FLOAT32_DIV: UByte = 0x95u
    const val FLOAT32_EQ: UByte = 0x5Bu
    const val FLOAT32_FLOOR: UByte = 0x8Eu
    const val FLOAT32_GE: UByte = 0x60u
    const val FLOAT32_GT: UByte = 0x5Eu
    const val FLOAT32_LE: UByte = 0x5Fu
    const val FLOAT32_LOAD: UByte = 0x2Au
    const val FLOAT32_LT: UByte = 0x5Du
    const val FLOAT32_MAX: UByte = 0x97u
    const val FLOAT32_MIN: UByte = 0x96u
    const val FLOAT32_MUL: UByte = 0x94u
    const val FLOAT32_NE: UByte = 0x5Cu
    const val FLOAT32_NEAREST: UByte = 0x90u
    const val FLOAT32_NEG: UByte = 0x8Cu
    const val FLOAT32_REINTERPRET_INT32: UByte = 0xBEu
    const val FLOAT32_SQRT: UByte = 0x91u
    const val FLOAT32_STORE: UByte = 0x38u
    const val FLOAT32_SUB: UByte = 0x93u
    const val FLOAT32_TRUNC: UByte = 0x8Fu
    const val FLOAT64_ABS: UByte = 0x99u
    const val FLOAT64_ADD: UByte = 0xA0u
    const val FLOAT64_CEIL: UByte = 0x9Bu
    const val FLOAT64_CONST: UByte = 0x44u
    const val FLOAT64_CONVERT_INT32_S: UByte = 0xB7u
    const val FLOAT64_CONVERT_INT32_U: UByte = 0xB8u
    const val FLOAT64_CONVERT_INT64_S: UByte = 0xB9u
    const val FLOAT64_CONVERT_INT64_U: UByte = 0xBAu
    const val FLOAT64_COPYSIGN: UByte = 0xA6u
    const val FLOAT64_DIV: UByte = 0xA3u
    const val FLOAT64_EQ: UByte = 0x61u
    const val FLOAT64_FLOOR: UByte = 0x9Cu
    const val FLOAT64_GE: UByte = 0x66u
    const val FLOAT64_GT: UByte = 0x64u
    const val FLOAT64_LE: UByte = 0x65u
    const val FLOAT64_LOAD: UByte = 0x2Bu
    const val FLOAT64_LT: UByte = 0x63u
    const val FLOAT64_MAX: UByte = 0xA5u
    const val FLOAT64_MIN: UByte = 0xA4u
    const val FLOAT64_MUL: UByte = 0xA2u
    const val FLOAT64_NE: UByte = 0x62u
    const val FLOAT64_NEAREST: UByte = 0x9Eu
    const val FLOAT64_NEG: UByte = 0x9Au
    const val FLOAT64_PROMOTE_FLOAT32: UByte = 0xBBu
    const val FLOAT64_REINTERPRET_INT64: UByte = 0xBFu
    const val FLOAT64_SQRT: UByte = 0x9Fu
    const val FLOAT64_STORE: UByte = 0x39u
    const val FLOAT64_SUB: UByte = 0xA1u
    const val FLOAT64_TRUNC: UByte = 0x9Du
    const val GLOBAL_GET: UByte = 0x23u
    const val GLOBAL_SET: UByte = 0x24u
    const val IF: UByte = 0x04u
    const val INT32_ADD: UByte = 0x6Au
    const val INT32_AND: UByte = 0x71u
    const val INT32_CLZ: UByte = 0x67u
    const val INT32_CONST: UByte = 0x41u
    const val INT32_CTZ: UByte = 0x68u
    const val INT32_DIV_S: UByte = 0x6Du
    const val INT32_DIV_U: UByte = 0x6Eu
    const val INT32_EQ: UByte = 0x46u
    const val INT32_EQZ: UByte = 0x45u
    const val INT32_EXTEND8_S: UByte = 0xC0u
    const val INT32_EXTEND16_S: UByte = 0xC1u
    const val INT32_GE_S: UByte = 0x4Eu
    const val INT32_GE_U: UByte = 0x4Fu
    const val INT32_GT_S: UByte = 0x4Au
    const val INT32_GT_U: UByte = 0x4Bu
    const val INT32_LE_S: UByte = 0x4Cu
    const val INT32_LE_U: UByte = 0x4Du
    const val INT32_LOAD: UByte = 0x28u
    const val INT32_LOAD8_S: UByte = 0x2Cu
    const val INT32_LOAD8_U: UByte = 0x2Du
    const val INT32_LOAD16_S: UByte = 0x2Eu
    const val INT32_LOAD16_U: UByte = 0x2Fu
    const val INT32_LT_S: UByte = 0x48u
    const val INT32_LT_U: UByte = 0x49u
    const val INT32_MUL: UByte = 0x6Cu
    const val INT32_NE: UByte = 0x47u
    const val INT32_OR: UByte = 0x72u
    const val INT32_POPCNT: UByte = 0x69u
    const val INT32_REINTERPRET_FLOAT32: UByte = 0xBCu
    const val INT32_REM_S: UByte = 0x6Fu
    const val INT32_REM_U: UByte = 0x70u
    const val INT32_ROTL: UByte = 0x77u
    const val INT32_ROTR: UByte = 0x78u
    const val INT32_TRUNC_FLOAT32_S: UByte = 0xA8u
    const val INT32_TRUNC_FLOAT32_U: UByte = 0xA9u
    const val INT32_TRUNC_FLOAT64_S: UByte = 0xAAu
    const val INT32_TRUNC_FLOAT64_U: UByte = 0xABu
    const val INT32_SHL: UByte = 0x74u
    const val INT32_SHR_S: UByte = 0x75u
    const val INT32_SHR_U: UByte = 0x76u
    const val INT32_STORE: UByte = 0x36u
    const val INT32_STORE8: UByte = 0x3Au
    const val INT32_STORE16: UByte = 0x3Bu
    const val INT32_SUB: UByte = 0x6Bu
    const val INT32_WRAP_INT64: UByte = 0xA7u
    const val INT32_XOR: UByte = 0x73u
    const val INT64_ADD: UByte = 0x7Cu
    const val INT64_AND: UByte = 0x83u
    const val INT64_CLZ: UByte = 0x79u
    const val INT64_CONST: UByte = 0x42u
    const val INT64_CTZ: UByte = 0x7Au
    const val INT64_DIV_S: UByte = 0x7Fu
    const val INT64_DIV_U: UByte = 0x80u
    const val INT64_EQ: UByte = 0x51u
    const val INT64_EQZ: UByte = 0x50u
    const val INT64_EXTEND8_S: UByte = 0xC2u
    const val INT64_EXTEND16_S: UByte = 0xC3u
    const val INT64_EXTEND32_S: UByte = 0xC4u
    const val INT64_EXTEND_INT32_S: UByte = 0xACu
    const val INT64_EXTEND_INT32_U: UByte = 0xADu
    const val INT64_GE_S: UByte = 0x59u
    const val INT64_GE_U: UByte = 0x5Au
    const val INT64_GT_S: UByte = 0x55u
    const val INT64_GT_U: UByte = 0x56u
    const val INT64_LE_S: UByte = 0x57u
    const val INT64_LE_U: UByte = 0x58u
    const val INT64_LOAD: UByte = 0x29u
    const val INT64_LOAD8_S: UByte = 0x30u
    const val INT64_LOAD8_U: UByte = 0x31u
    const val INT64_LOAD16_S: UByte = 0x32u
    const val INT64_LOAD16_U: UByte = 0x33u
    const val INT64_LOAD32_S: UByte = 0x34u
    const val INT64_LOAD32_U: UByte = 0x35u
    const val INT64_LT_S: UByte = 0x53u
    const val INT64_LT_U: UByte = 0x54u
    const val INT64_MUL: UByte = 0x7Eu
    const val INT64_NE: UByte = 0x52u
    const val INT64_OR: UByte = 0x84u
    const val INT64_POPCNT: UByte = 0x7Bu
    const val INT64_REINTERPRET_FLOAT64: UByte = 0xBDu
    const val INT64_REM_S: UByte = 0x81u
    const val INT64_REM_U: UByte = 0x82u
    const val INT64_ROTL: UByte = 0x89u
    const val INT64_ROTR: UByte = 0x8Au
    const val INT64_SHL: UByte = 0x86u
    const val INT64_SHR_S: UByte = 0x87u
    const val INT64_SHR_U: UByte = 0x88u
    const val INT64_STORE: UByte = 0x37u
    const val INT64_STORE8: UByte = 0x3Cu
    const val INT64_STORE16: UByte = 0x3Du
    const val INT64_STORE32: UByte = 0x3Eu
    const val INT64_SUB: UByte = 0x7Du
    const val INT64_TRUNC_FLOAT32_S: UByte = 0xAEu
    const val INT64_TRUNC_FLOAT32_U: UByte = 0xAFu
    const val INT64_TRUNC_FLOAT64_S: UByte = 0xB0u
    const val INT64_TRUNC_FLOAT64_U: UByte = 0xB1u
    const val INT64_XOR: UByte = 0x85u
    const val MEMORY_GROW: UByte = 0x40u
    const val MEMORY_SIZE: UByte = 0x3Fu
    const val NOP: UByte = 0x01u
    const val LOCAL_GET: UByte = 0x20u
    const val LOCAL_SET: UByte = 0x21u
    const val LOCAL_TEE: UByte = 0x22u
    const val LOOP: UByte = 0x03u
    const val RETURN: UByte = 0x0Fu
    const val SELECT: UByte = 0x1Bu
    const val UNREACHABLE: UByte = 0x00u
}
